var gameOverModal = document.getElementById("game-over-modal");


/*****************************************************************************
 * Game levels
 *****************************************************************************/
var defaultChallengeSet = [
    {info: "INFO: V04-02-00-02-01 C00-00-06 D0000 T000001 E010 S00.000 #3x3=4-103130400"},
    {info: "INFO: V02-03-03-01-00 C00-00-06 D0000 T000001 E006 S00.026 #3x3=4-013012221"},
    {info: "INFO: V03-02-03-00-01 C00-00-06 D0000 T000001 E009 S00.000 #3x3=4-210210204"},

    {info: "INFO: V10-13-06-05-02 C00-00-36 D0000000000000 T000001 E043 S00.146 #6x6=4-122014211130001320232111011030103140"},
    {info: "INFO: V13-11-01-09-02 C00-22-36 D0100000000000 T000001 E079 S00.135 #6x6=4-301300101031303103210431113000104013"},
    {info: "INFO: V15-08-02-08-03 C02-13-34 D0012020001000 T000003 E062 S00.109 #6x6=4-113040300402033302110100400310003131"},

    {info: "INFO: V30-19-14-11-07 C00-00-90 D0000000000000000000000000000 T000001 E119 S00.000 #9x9=4-112010420132130020041322013000100440013041330001020201201311120242401031013002023"},
    {info: "INFO: V26-22-18-10-05 C00-00-90 D0000000000000000000000000000 T000001 E131 S00.752 #9x9=4-200234303212010010300211021200412002221111402000132120042110031221021431310133100"},
    {info: "INFO: V25-25-15-11-05 C00-00-90 D0000000000000000000000000000 T000001 E123 S00.206 #9x9=4-311030112201303014213001110003142230130121201122101114140124000003202200302201113"},
    {info: "INFO: V23-30-10-14-04 C00-00-90 D0000000000000000000000000000 T000001 E129 S00.001 #9x9=4-330330112013012111110110220011130140130034101313010223003110312104022001213011141"},

    {info: "INFO: V28-19-19-09-06 C00-00-90 D0000000000000000000000000000 T000001 E126 S00.006 #9x9=4-401402023103002000310002011004122432230201120100122104124203203021311111222100300"},
    {info: "INFO: V23-21-27-07-03 C00-00-90 D0000000000000000000000000000 T000001 E129 S00.908 #9x9=4-311301220100322111200021002123112141224000320020011120202234222012200222212031011"},
    {info: "INFO: V26-20-23-06-06 C00-00-90 D0000000000000000000000000000 T000001 E137 S00.081 #9x9=4-121112022220211202130203022420410124002031100121010201124330232120104240110000002"},
    {info: "INFO: V29-17-20-09-06 C00-00-90 D0000000000000000000000000000 T000001 E132 S00.192 #9x9=4-004012112221210103030121224014023010200110300220032021322312412042430000100000132"},
    {info: "INFO: V28-17-23-07-06 C00-08-90 D0000000000000000000000010000 T000001 E135 S00.061 #9x9=4-022211240432211002010123210000110302411112042033241100000200002011203340222220022"},

    {info: "INFO: V23-27-14-15-02 C00-00-90 D0000000000000000000000000000 T000001 E133 S00.779 #9x9=4-220030021021314111122101142000100202311323302130021110113111032230303301101330101"},
    {info: "INFO: V28-21-13-15-04 C00-16-90 D0000000000000000000100000000 T000001 E143 S00.213 #9x9=4-002200231320113204103312200120021003131202410210311013033112000400300330011103114"},
    {info: "INFO: V37-11-14-07-12 C00-26-90 D0000000000000010000000000000 T000001 E143 S01.010 #9x9=4-203040042321413401030000001100000012214004430021320442132004001402220401000200002"},
    {info: "INFO: V23-26-16-14-02 C00-38-90 D0000000010000000000000000000 T000001 E139 S01.831 #9x9=4-041120322201221022013011100200131030230032013111131331013031003221202110211130104"},
    {info: "INFO: V23-27-15-13-03 C00-42-90 D0000001000000000000000000000 T000001 E134 S01.012 #9x9=4-110131021312421401013001030030133011212030220102041313130300101311121212021102202"},

    {info: "INFO: V23-24-21-10-03 C01-09-89 D0000000000000000010200000000 T000002 E130 S00.181 #9x9=4-042112004101302210321102131001220111313130142210112200022210222200120201013310330"},
    {info: "INFO: V23-26-18-10-04 C01-14-89 D0000000000000001000020000000 T000002 E133 S00.262 #9x9=4-120112122304312102020221321120001011113040011033130222101301213012101000041403221"},
    {info: "INFO: V31-17-17-07-09 C01-25-89 D0000000010000000000200000000 T000003 E133 S00.810 #9x9=4-042004002040112042002214000022110140131220123403202241000112000001113122043031030"},
    {info: "INFO: V31-21-11-07-11 C02-25-88 D0000000000001002000310000000 T000003 E121 S00.026 #9x9=4-000422400400111103211311202101040001134104003200030402042410402101000031121034121"},
    {info: "INFO: V18-31-19-13-00 C03-16-87 D0000000001000200020000000000 T000006 E124 S00.175 #9x9=4-001212310223021112011213323311001120312303001011121201122221213001110021311303211"},

    {info: "INFO: V30-18-17-08-08 C01-23-89 D0000000000001002000010000000 T000006 E122 S00.340 #9x9=4-321201400001222101131221330112021230000401003431040211010022221300400001040402204"},
    {info: "INFO: V30-16-20-08-07 C02-35-88 D0000010000003000300001000000 T000003 E143 S00.286 #9x9=4-023204001201214003202020200221214021013010113313021220110301422002103002042040040"},
    {info: "INFO: V29-15-25-05-07 C02-29-88 D0000300000100000000030000000 T000004 E137 S01.043 #9x9=4-001340220422010032040112211001120201212213004031102103202422210220002044022220000"},
    {info: "INFO: V31-13-23-07-07 C05-15-85 D0000000001330023000003000000 T000006 E130 S00.078 #9x9=4-022202040102042001301400012031010421221313020202022023100204012042040300312102202"},
    {info: "INFO: V18-29-23-11-00 C04-17-86 D0000000010300320000200000000 T000012 E143 S00.320 #9x9=4-013131212210100121230212201033122011110201331211130212111102032202030210221112032"},

    {info: "INFO: V24-24-18-12-03 C03-20-87 D0012320000001000000000000000 T000010 E117 S00.000 #9x9=4-202313020230103232111020102134022111000112321104020011300203012134021211030130211"},
    {info: "INFO: V18-29-24-09-01 C02-18-88 D0100003000000000000000000000 T000118 E121 S00.045 #9x9=4-211040120113010212212232222010011110322212021110212221102010131333231311010112002"},
    {info: "INFO: V31-16-18-08-08 C05-39-85 D0001000000220332000100000000 T000016 E141 S00.010 #9x9=4-210002210223400043011422004030020200010021130440403131002020311220211302200042111"},
    {info: "INFO: V19-29-22-09-02 C08-37-82 D0303322020010000000000000000 T000022 E141 S00.462 #9x9=4-121212103121031040112400301221211202201212001122010223130122001103112312121030131"},
    {info: "INFO: V18-31-22-07-03 C07-16-83 D0000010200000332330020000000 T000019 E131 S00.930 #9x9=4-040223122211100210311221104013103010130020310112221112212111022211122201112110043"},

    {info: "INFO: V25-28-09-14-05 C12-21-78 D0323133030230222000000000000 T000036 E148 S01.208 #9x9=4-001121121410040301033104034303030310111031030004001101130310221311032211012111122"},
    {info: "INFO: V35-13-13-11-09 C08-19-82 D0030032332330000000000000000 T000017 E142 S00.348 #9x9=4-130204040331230310001010031112244040422000030002130131220400000222000404002031301"},
    {info: "INFO: V35-15-12-07-12 C10-15-80 D0000003323330300000000000000 T000397 E149 S03.074 #9x9=4-104040012210000041200040322001304100243100104301040040011224301401200400031122203"},
    {info: "INFO: V29-14-26-06-06 C08-21-82 D0003230000030000100020000000 T000322 E146 S00.688 #9x9=4-310222001013202012400004431022230002020014311204230021200212212022100010400122222"},
    {info: "INFO: V16-33-21-11-00 C05-16-85 D0103200000000031000000000000 T001162 E109 S00.011 #9x9=4-121102031112122120211213102112210130112022131122201030110310321031213111220310013"},
];

var gameChallenges = defaultChallengeSet;

var manualChallenges = [];

/*****************************************************************************
 * Parse URL options
 *****************************************************************************/
var level_option = undefined;
var set_option   = undefined;
var storageName  = "verborium/game-level";
var level = 0;
function parseOptions() {
    let URL_option_string = window.location.href.split("?")[1];
    if (URL_option_string != undefined) {
        /* Convert URL special characters */
        URL_option_string = URL_option_string.replace("%24",'$').replace("%23",'#');

        var URL_options = URL_option_string.split("&");

        /* Go through options */
        for (let i = 0; i < URL_options.length; i++) {
            /* Level option */
            if (URL_options[i].match(/L[0-9]*$/) != null) {
                level_option = URL_options[i].split("L")[1];
            }

            /* Challenge set option */
            if (URL_options[i].match(/S[0-9]*$/) != null) {
                set_option = URL_options[i].split("S")[1];
            }

            if (URL_options[i].match(/#.*$/) != null) {
                level_option = 1;
                set_option   = "#";
                manualChallenges.push({info: URL_options[i]});

                /* Remove hash sign from URL */
                window.history.pushState({}, null, window.location.href.replace('#', '$'));
            }

            if (URL_options[i].match(/\$.*$/) != null) {
                level_option = 1;
                set_option   = "#";

                manualChallenges.push({info: URL_options[i].replace('$', '#')});
            }
        }
    }

    /* Option fallbacks */
    if (set_option == undefined || set_option == 0) {
        gameChallenges = defaultChallengeSet;
    } else {
        gameChallenges = manualChallenges;
        storageName    = storageName + "-#";
    }

    if (level_option == undefined) {
        /* Read from storage */
        level = JSON.parse(localStorage.getItem(storageName));
    } else {
        level = Number(level_option) - 1;
    }

}


/*****************************************************************************
 * Modal window handling (Game over)
 *****************************************************************************/
function modalClick(event) {
    event.preventDefault();

    gameOverModal.style.visibility = "hidden";
    gameBoard.style.visibility     = "visible";

    gameStart(game.level);
}

gameOverModal.addEventListener("click",      modalClick);
gameOverModal.addEventListener("touchend",   modalClick, {passive: true});


/*****************************************************************************
 * Game initialization
 *****************************************************************************/
function gameStart(level) {
    /* Check level value */
    if (level == undefined || level < 0) {
        level = 0;
    }

    if (level >= gameChallenges.length) {
        level = gameChallenges.length - 1;
    }

    /* Use predefined challenges */
    game.init(level, gameChallenges[level].info);

/* Debug text */
document.getElementById("debug-text").innerHTML = gameChallenges[level].info.split("#")[0];

    /* Save game point */
    localStorage.setItem(storageName, JSON.stringify(game.level));

    /* Setup board */
    uiBoardSetup(game.board);
}


var game = undefined;
window.onload = function () {
    /* Parse options */
    parseOptions();

    /* Start game */
    game = new Game();
    gameStart(level);

    /* Show window */
    document.getElementById("game-screen").style.visibility = "visible";
}



